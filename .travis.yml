language: elixir
elixir:
  - 1.9
node_js:
  - 12

otp_release:
  - 21.0

env:
  global:
    - LANG=en_US.UTF-8
    - LANGUAGE=en_US:en
    - LC_ALL=en_US.UTF-8

services:
  - postgresql
  - docker

before_install:
  - nvm install 12

before_script:
  - mix deps.get
  - pushd assets && nvm use 12 && yarn install && popd
  - cp config/test.travis.exs config/test.exs
  - MIX_ENV=test mix ecto.create
  - MIX_ENV=test mix ecto.migrate

script:
  - nvm use 12 && mix coveralls.travis

after_failure:
  - ./travis/post_build_results

after_success:
  - ./travis/post_build_results
  - |
    if [[ $TRAVIS_PULL_REQUEST == “false” ]] && [[ $TRAVIS_BRANCH == “master” ]]; then
      ./travis/travis_development_status_report
    fi
  - |
    if [[ $TRAVIS_PULL_REQUEST == “false” ]] && [[ $TRAVIS_BRANCH == “master” ]]; then
      echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      ./travis/docker_build_release_image
    fi

deploy:
  - provider: s3
    bucket: "ic-yellr"
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    region: us-east-1
    skip_cleanup: true
    local_dir: travis_development_status_reports
    default_text_charset: 'utf-8'
    on:
      branch: master
  - provider: s3
    bucket: "ideacrew-com"
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    region: us-east-1
    local_dir: codedeploy_releases
    skip_cleanup: true
    on:
      branch: master
  - provider: codedeploy
    bucket: "ideacrew-com"
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    key: yellr.zip
    bundle_type: zip
    application: yellr
    deployment_group: yellr-tx
    region: us-east-1
    wait_until_deployed: true
    on:
      branch: master